<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <metadata name="$this.RulerSnapLines" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0
        dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EHAQAAAAABAAAAAAAAAAQU
        U3lzdGVtLkRyYXdpbmcuUG9pbnQCAAAACw==
</value>
  </metadata>
</root>