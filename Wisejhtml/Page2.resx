<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        k0AXogAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.RulerSnapLines" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0
        dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EHAQAAAAABAAAAAAAAAAQU
        U3lzdGVtLkRyYXdpbmcuUG9pbnQCAAAACw==
</value>
  </metadata>
</root>